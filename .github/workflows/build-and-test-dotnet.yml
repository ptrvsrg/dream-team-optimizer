name: Build and Test .NET
'on':
    push: null
    pull_request: null
    workflow_dispatch: null
jobs:
    build-and-test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                solutions:
                    - DreamTeamOptimizer.ConsoleApp.sln
                    - DreamTeamOptimizer.MsEmployee.sln
                    - DreamTeamOptimizer.MsHrManager.sln
                    - DreamTeamOptimizer.MsHrDirector.sln
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 8.0.x
            - name: Restore dependencies
              run: 'dotnet restore ${{ matrix.solutions }}'
            - name: Build
              run: 'dotnet build ${{ matrix.solutions }} -o out --no-restore'
            - name: Upload build artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: 'build-artifacts-${{ matrix.solutions }}'
                  path: out
            - name: Test
              run: >-
                  dotnet test ${{ matrix.solutions }} --no-restore --verbosity normal 
                  --results-directory test-results --logger:trx
            - name: Upload test artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: 'test-artifacts-${{ matrix.solutions }}'
                  path: test-results
    launch-test-strategies:
        runs-on: ubuntu-latest
        needs: build-and-test
        steps:
            - name: Download build artifacts
              uses: actions/download-artifact@v3
              with:
                  name: build-artifacts-DreamTeamOptimizer.ConsoleApp.sln
                  path: out
            - name: Launch Gale-Shapley Strategy
              run: >
                  export HACKATHON_HACKATHON_COUNT=1000
                  
                  export
                  HACKATHON_JUNIORS_FILE_PATH=$(pwd)/src/DreamTeamOptimizer.ConsoleApp/example/Juniors20.csv
                  
                  export
                  HACKATHON_TEAM_LEADS_FILE_PATH=$(pwd)/src/DreamTeamOptimizer.ConsoleApp/example/Teamleads20.csv
                  
                  export HACKATHON_STRATEGY_TYPE=GaleShapley
                  
                  cat <<EOF > appsettings.json
                  
                  {
                      "Config": {
                          "JuniorsFilePath": "$HACKATHON_JUNIORS_FILE_PATH",
                          "TeamLeadsFilePath": "$HACKATHON_TEAM_LEADS_FILE_PATH",
                          "Strategy": "$HACKATHON_STRATEGY_TYPE",
                          "HackathonCount": $HACKATHON_HACKATHON_COUNT
                      }
                  }
                  
                  EOF
                  
                  ./out/DreamTeamOptimizer.ConsoleApp
            - name: Launch Weighted Preference Strategy
              run: >
                  export HACKATHON_HACKATHON_COUNT=1000
                  
                  export
                  HACKATHON_JUNIORS_FILE_PATH=$(pwd)/src/DreamTeamOptimizer.ConsoleApp/example/Juniors20.csv
                  
                  export
                  HACKATHON_TEAM_LEADS_FILE_PATH=$(pwd)/src/DreamTeamOptimizer.ConsoleApp/example/Teamleads20.csv
                  
                  export HACKATHON_STRATEGY_TYPE=WeightedPreference
                  
                  cat <<EOF > appsettings.json
                  
                  {
                    "Config": {
                        "JuniorsFilePath": "$HACKATHON_JUNIORS_FILE_PATH",
                        "TeamLeadsFilePath": "$HACKATHON_TEAM_LEADS_FILE_PATH",
                        "Strategy": "$HACKATHON_STRATEGY_TYPE",
                        "HackathonCount": $HACKATHON_HACKATHON_COUNT
                    }
                  }
                  
                  EOF
                  
                  dotnet ./out/DreamTeamOptimizer.ConsoleApp.dll
            - name: Launch Bipartite Graph Strategy
              run: >
                  export HACKATHON_HACKATHON_COUNT=1000
                  
                  export
                  HACKATHON_JUNIORS_FILE_PATH=$(pwd)/src/DreamTeamOptimizer.ConsoleApp/example/Juniors20.csv
                  
                  export
                  HACKATHON_TEAM_LEADS_FILE_PATH=$(pwd)/src/DreamTeamOptimizer.ConsoleApp/example/Teamleads20.csv
                  
                  export HACKATHON_STRATEGY_TYPE=BipartiteGraph
                  
                  cat <<EOF > appsettings.json
                  
                  {
                    "Config": {
                        "JuniorsFilePath": "$HACKATHON_JUNIORS_FILE_PATH",
                        "TeamLeadsFilePath": "$HACKATHON_TEAM_LEADS_FILE_PATH",
                        "Strategy": "$HACKATHON_STRATEGY_TYPE",
                        "HackathonCount": $HACKATHON_HACKATHON_COUNT
                    }
                  }
                  
                  EOF
                  
                  dotnet ./out/DreamTeamOptimizer.ConsoleApp.dll
